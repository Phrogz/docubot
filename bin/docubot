#!/usr/bin/env ruby

# Hack to allow the binary to be run without the gem installed
$: << File.join( File.dirname( __FILE__ ), '..', 'lib' )

require 'rubygems'
require 'docubot'

USAGE = <<ENDUSAGE
Usage:
   docubot [-t template_name] [create [-f]] directory
   -t, --template  The template to use (overrides any local template).
                   Available templates: #{DocuBot::INSTALLED_TEMPLATES.join(', ')}
   create          Create a starter directory filled with example files;
                   also copies the template for easy modification, if desired.
   -f, --force     Force create over an existing directory,
                   deleting any existing files.
ENDUSAGE

ARGS = { :template=>'default' }
UNFLAGGED_ARGS = [ :directory ]
next_arg = UNFLAGGED_ARGS.first
ARGV.each{ |arg|
	case arg
		when '-h','--help'
		  ARGS[:help] = true
		when 'create'
		  ARGS[:create] = true
		when '-f','--force'
		  ARGS[:force] = true
		when '-t','--template'
			ARGS[:explicit_template] = true
			next_arg = :template
		else
			if next_arg
				ARGS[next_arg] = arg
				UNFLAGGED_ARGS.delete( next_arg )
			end
			next_arg = UNFLAGGED_ARGS.first
	end
}

if ARGS[:help] or !ARGS[:directory]
	puts USAGE
	exit
end

unless DocuBot::INSTALLED_TEMPLATES.include?( ARGS[:template] )
	puts "  Error: '#{ARGS[:template]}' is not a valid template.",
	     "  Available templates: #{DocuBot::INSTALLED_TEMPLATES.join(', ')}",
	     "  (Templates are installed in #{DocuBot::TEMPLATE_DIR})", ""
	exit
end

if ARGS[:create]
	require 'fileutils'
	if File.exist?( ARGS[:directory] )
		if ARGS[:force]
			# TODO: confirmation?
			# TODO: May be able to just use :force=>true for cp_r
			FileUtils.rm_rf( ARGS[:directory] )
		else
			puts "  Error: directory '#{ARGS[:directory]}' already exists.",
			     "  Use the --force option to forcibly overwrite.", ""
			exit
		end
	end
	src  = File.expand_path( DocuBot::TEMPLATE_DIR/ARGS[:template] )
	dest = File.expand_path( ARGS[:directory] )
	puts "  Creating:   #{dest}",
	     "  as copy of: #{src}", ""
	FileUtils.cp_r( src, dest )
else
	bundle = DocuBot::Bundle.new( ARGS[:directory] )
	bundle.write( ARGS[:explicit_template] && ARGS[:template] )
end

